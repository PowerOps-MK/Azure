{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vnetName": {
      "type": "string",
      "defaultValue": "[format('vnet{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Specifies the name of the Azure Storage account."
      }
    },
    "snetAName": {
      "type": "string",
      "defaultValue": "subnetA",
      "metadata": {
        "description": "Specifies the name of the Azure Storage account."
      }
    },	
    "ngName": {
      "type": "string",
      "defaultValue": "[format('NAT{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Specifies the name of the Azure Storage account."
      }
    },		
    "ipNGName": {
      "type": "string",
      "defaultValue": "[format('IPNG{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Specifies the name of the Azure Storage account."
      }
    },
    "nsgName": {
      "type": "string",
      "defaultValue": "[format('NSG{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Specifies the name of the Azure Storage account."
      }
    },	
    "udrName": {
      "type": "string",
      "defaultValue": "[format('UDR{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Specifies the name of the Azure Storage account."
      }
    },
    "vnetGWName": {
      "type": "string",
      "defaultValue": "[format('vnetGW{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Specifies the name of the Azure Storage account."
      }
    },
    "snetGWName": {
      "type": "string",
      "defaultValue": "GatewaySubnet",
      "metadata": {
        "description": "Specifies the name of the Azure Storage account."
      }
    },	
    "gwName": {
      "type": "string",
      "defaultValue": "[format('GW{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Specifies the name of the Azure Storage account."
      }
    },	
    "ipGWName": {
      "type": "string",
      "defaultValue": "[format('IPGW{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Specifies the name of the Azure Storage account."
      }
    },	
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "works with West US"
      }
    },
	"tenantId": {
	  "type": "string",
	  "defaultValue": "[subscription().tenantId]",
	  "metadata": {
  	    "description": "works with Visual Studio Enterprise"
	  }
	}	
  },
  "variables": {},
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks",
	  "apiVersion": "2023-04-01",
      "name": "[parameters('vnetName')]",
      "location": "[parameters('location')]",
      "properties": {
	    "addressSpace": {
		  "addressPrefixes": [
		    "10.10.0.0/16"
		  ]
	    }
	  }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2023-04-01",
      "name": "[parameters('ipNGName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
      ],	  
	  "sku": {
        "name": "Standard",
		"tier": "Regional"
	  },
	  "zones": [],
      "properties": {
		"publicIPAddressVersion": "IPv4",
		"publicIPAllocationMethod": "Static"
	  }
    },
	{
      "type": "Microsoft.Network/natGateways",
	  "apiVersion": "2023-04-01",
	  "name": "[parameters('ngName')]",
	  "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('ipNGName'))]"
      ],	  
      "sku": {
        "name": "Standard"
      },	  
	  "properties": {
        "idleTimeoutInMinutes": 10,
		"publicIPAddresses": [
          {
            "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('ipNGName'))]"
          }
        ]		
	  }
	},	
	{
      "type": "Microsoft.Network/networkSecurityGroups",
	  "apiVersion": "2023-04-01",
	  "name": "[parameters('nsgName')]",
	  "location": "[parameters('location')]",
	  "properties": {
	  }
	}, 	
    {
	  "type": "Microsoft.Network/routeTables",
  	  "apiVersion": "2020-05-01",
	  "name": "[parameters('udrName')]",
	  "location": "[parameters('location')]",
	  "properties": {
        "disableBgpRoutePropagation": false
	  }
    },
	{
	  "type": "Microsoft.Network/virtualNetworks/subnets",
	  "apiVersion": "2020-05-01",
	  "name": "[concat(parameters('vnetName'), '/', parameters('snetAName'))]",
	  "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/routeTables', parameters('udrName'))]",
		"[resourceId('Microsoft.Network/natGateways', parameters('ngName'))]",
		"[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
      ],  
	  "properties": {
		"addressPrefix": "10.10.0.0/24",  
		"routeTable": {
          "id": "[resourceId('Microsoft.Network/routeTables', parameters('udrName'))]"
        },
        "natGateway": {
          "id": "[resourceId('Microsoft.Network/natGateways', parameters('ngName'))]"
        },
		"networkSecurityGroup": {
		  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
		},
		"serviceEndpoints": [
          {
            "service": "Microsoft.KeyVault",
            "locations": [
              "*"
            ]
          }
        ]
	  }
	},	
    {
      "type": "Microsoft.Network/virtualNetworks",
	  "apiVersion": "2023-04-01",
      "name": "[parameters('vnetGWName')]",
      "location": "[parameters('location')]",
      "properties": {
	    "addressSpace": {
		  "addressPrefixes": [
		    "10.20.0.0/16"
		  ]
	    }
	  }
    },
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2023-04-01",
      "name": "[concat(parameters('vnetGWName'), '/', parameters('snetGWName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetGWName'))]"
      ],
      "properties": {
        "addressPrefix": "10.20.0.0/24"
      }
    },	
    {
      "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
      "apiVersion": "2023-04-01",
      "name": "[concat(parameters('vnetName'), '/Vnet-To-GW')]",
      "location": "[parameters('location')]",
	  "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('snetAName'))]",
		"[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetGWName'), parameters('snetGWName'))]"
	  ],	  
      "properties": {
  	    "allowVirtualNetworkAccess": "true",
 	    "allowForwardedTraffic": "true",
	    "allowGatewayTransit": "false",
	    "useRemoteGateways": "false",
	    "remoteVirtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetGWName'))]"
	    }
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
      "apiVersion": "2023-04-01",
      "name": "[concat(parameters('vnetGWName'), '/GW-To-Vnet')]",
      "location": "[parameters('location')]",
	  "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('snetAName'))]",
		"[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetGWName'), parameters('snetGWName'))]"
	  ],	  
      "properties": {
  	    "allowVirtualNetworkAccess": "true",
 	    "allowForwardedTraffic": "true",
	    "allowGatewayTransit": "true",
	    "useRemoteGateways": "false",
	    "remoteVirtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
	    }
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2023-04-01",
      "name": "[parameters('ipGWName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetGWName'))]"
      ],	  
	  "sku": {
        "name": "Standard",
		"tier": "Regional"
	  },
	  "zones": [],
      "properties": {
		"publicIPAddressVersion": "IPv4",
		"publicIPAllocationMethod": "Static"
	  }
    },
	{
	  "type": "Microsoft.Network/virtualNetworkGateways",
	  "apiVersion": "2023-02-01",
	  "name": "[parameters('gwName')]",
	  "location": "[parameters('location')]",
	  "dependsOn": [
		"[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetGWName'), parameters('snetGWName'))]",
		"[resourceId('Microsoft.Network/publicIPAddresses', parameters('ipGWName'))]"
	  ],
	  "properties": {
		"vpnType": "RouteBased",
		"vpnGatewayGeneration": "Generation1",
		"sku": {
		  "name": "VpnGw1",
		  "tier": "VpnGw1"
		},		  
		"gatewayType": "Vpn",
		"ipConfigurations": [
		  {
			"name": "default",
			"properties": {
			  "privateIPAllocationMethod": "Dynamic",
			  "subnet": {
				"id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetGWName'), parameters('snetGWName'))]"
			  },
			  "publicIpAddress": {
				"id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('ipGWName'))]"
			  }
			}
		  }
		]
	  }
	}
  ],
  "outputs": {}
}
