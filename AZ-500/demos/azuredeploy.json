{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vnetName": {
      "type": "string",
      "defaultValue": "[format('vnet{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Specifies the name of the Azure Storage account."
      }
    },
    "snetAName": {
      "type": "string",
      "defaultValue": "subnetA",
      "metadata": {
        "description": "Specifies the name of the Azure Storage account."
      }
    },	
    "ngName": {
      "type": "string",
      "defaultValue": "[format('NAT{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Specifies the name of the Azure Storage account."
      }
    },		
    "ipNGName": {
      "type": "string",
      "defaultValue": "[format('IPNG{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Specifies the name of the Azure Storage account."
      }
    },
    "nsgName": {
      "type": "string",
      "defaultValue": "[format('NSG{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Specifies the name of the Azure Storage account."
      }
    },	
    "udrName": {
      "type": "string",
      "defaultValue": "[format('UDR{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Specifies the name of the Azure Storage account."
      }
    },

    "vmName": {
      "type": "string",
      "defaultValue": "[format('VM{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Specifies the name of the Azure Storage account."
      }
    },	
	
    "storageName": {
      "type": "string",
      "defaultValue": "[format('storage{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Specifies the name of the Azure Storage account."
      }
    },	
    "peName": {
      "type": "string",
      "defaultValue": "[format('PE{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Specifies the name of the Azure Storage account."
      }
    },

    "vnetGWName": {
      "type": "string",
      "defaultValue": "[format('vnetGW{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Specifies the name of the Azure Storage account."
      }
    },
    "snetGWName": {
      "type": "string",
      "defaultValue": "GatewaySubnet",
      "metadata": {
        "description": "Specifies the name of the Azure Storage account."
      }
    },	
    "gwName": {
      "type": "string",
      "defaultValue": "[format('GW{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Specifies the name of the Azure Storage account."
      }
    },	
    "peeringName": {
      "type": "string",
      "defaultValue": "/Vnet-To-GW",
      "metadata": {
        "description": "Specifies the name of the Azure Storage account."
      }
    },	
    "ipGWName": {
      "type": "string",
      "defaultValue": "[format('IPGW{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Specifies the name of the Azure Storage account."
      }
    },	

    "vnetBastionName": {
      "type": "string",
      "defaultValue": "[format('vnetBastion{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Specifies the name of the Azure Storage account."
      }
    },	
    "snetBastionName": {
      "type": "string",
      "defaultValue": "AzureBastionSubnet",
      "metadata": {
        "description": "Specifies the name of the Azure Storage account."
      }
    },		
    "ipBastionName": {
      "type": "string",
      "defaultValue": "[format('IPBastion{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Specifies the name of the Azure Storage account."
      }
    },
    "bastionName": {
      "type": "string",
      "defaultValue": "[format('Bastion{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Specifies the name of the Azure Storage account."
      }
    },
	
    "kvName": {
      "type": "string",
      "defaultValue": "[format('KV{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Specifies the name of the Azure Storage account."
      }
    },
    "logName": {
      "type": "string",
      "defaultValue": "[format('LOG{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Specifies the name of the Azure Storage account."
      }
    },	

    "acrName": {
      "type": "string",
      "defaultValue": "[format('acr{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Specifies the name of the Azure Storage account."
      }
    },	
    "containerName": {
      "type": "string",
      "defaultValue": "[format('CI{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Specifies the name of the Azure Storage account."
      }
    },	
	
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "works with West US"
      }
    },
	"tenantId": {
	  "type": "string",
	  "defaultValue": "[subscription().tenantId]",
	  "metadata": {
  	    "description": "works with Visual Studio Enterprise"
	  }
	}	
  },
  "variables": {},
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks",
	  "apiVersion": "2023-04-01",
      "name": "[parameters('vnetName')]",
      "location": "[parameters('location')]",
      "properties": {
	    "addressSpace": {
		  "addressPrefixes": [
		    "10.10.0.0/16"
		  ]
	    }
	  }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2023-04-01",
      "name": "[parameters('ipNGName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
      ],	  
	  "sku": {
        "name": "Standard",
		"tier": "Regional"
	  },
	  "zones": [],
      "properties": {
		"publicIPAddressVersion": "IPv4",
		"publicIPAllocationMethod": "Static"
	  }
    },
	{
      "type": "Microsoft.Network/natGateways",
	  "apiVersion": "2023-04-01",
	  "name": "[parameters('ngName')]",
	  "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('ipNGName'))]"
      ],	  
      "sku": {
        "name": "Standard"
      },	  
	  "properties": {
        "idleTimeoutInMinutes": 10,
		"publicIPAddresses": [
          {
            "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('ipNGName'))]"
          }
        ]		
	  }
	},	
	{
      "type": "Microsoft.Network/networkSecurityGroups",
	  "apiVersion": "2023-04-01",
	  "name": "[parameters('nsgName')]",
	  "location": "[parameters('location')]",
	  "properties": {
	  }
	}, 	
    {
	  "type": "Microsoft.Network/routeTables",
  	  "apiVersion": "2020-05-01",
	  "name": "[parameters('udrName')]",
	  "location": "[parameters('location')]",
	  "properties": {
        "disableBgpRoutePropagation": false
	  }
    },
	{
	  "type": "Microsoft.Network/virtualNetworks/subnets",
	  "apiVersion": "2020-05-01",
	  "name": "[concat(parameters('vnetName'), '/', parameters('snetAName'))]",
	  "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/routeTables', parameters('udrName'))]",
		"[resourceId('Microsoft.Network/natGateways', parameters('ngName'))]",
		"[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
      ],  
	  "properties": {
		"addressPrefix": "10.10.0.0/24",  
		"routeTable": {
          "id": "[resourceId('Microsoft.Network/routeTables', parameters('udrName'))]"
        },
        "natGateway": {
          "id": "[resourceId('Microsoft.Network/natGateways', parameters('ngName'))]"
        },
		"networkSecurityGroup": {
		  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
		},
		"serviceEndpoints": [
          {
            "service": "Microsoft.KeyVault",
            "locations": [
              "*"
            ]
          }
        ]
	  }
	},
	
    {
	  "type": "Microsoft.Storage/storageAccounts",
	  "apiVersion": "2019-06-01",
	  "name": "[parameters('storageName')]",
	  "location": "[parameters('location')]",
	  "sku": {
        "name": "Premium_LRS",
        "tier": "Premium"
      },
      "kind": "StorageV2",
	  "properties": {
	  } 
	},
	{
	  "type": "Microsoft.Network/privateEndpoints",
	  "apiVersion": "2020-11-01",
	  "name": "[parameters('peName')]",
	  "location": "[parameters('location')]",
	  "dependsOn": [
		"[resourceId('Microsoft.Storage/storageAccounts', parameters('storageName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('snetAName'))]"
      ],
	  "properties": {
        "privateLinkServiceConnections": [
	      {
		    "name": "[concat(parameters('peName'), '-nic')]",
		    "properties": {
			  "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageName'))]",
			  "groupIds": [
			    "blob"
			  ]
		    }
		  }
	    ],
	    "subnet": {
	      "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('snetAName'))]"
	    }
	  }
    },
	
    {
      "type": "Microsoft.Network/virtualNetworks",
	  "apiVersion": "2023-04-01",
      "name": "[parameters('vnetGWName')]",
      "location": "[parameters('location')]",
      "properties": {
	    "addressSpace": {
		  "addressPrefixes": [
		    "10.20.0.0/16"
		  ]
	    }
	  }
    },
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2023-04-01",
      "name": "[concat(parameters('vnetGWName'), '/', parameters('snetGWName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetGWName'))]"
      ],
      "properties": {
        "addressPrefix": "10.20.0.0/24"
      }
    },	
    {
      "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
      "apiVersion": "2023-04-01",
      "name": "[concat(parameters('vnetName'), parameters('peeringName'))]",
      "location": "[parameters('location')]",
	  "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetGWName'))]"
	  ],	  
      "properties": {
  	    "allowVirtualNetworkAccess": "true",
 	    "allowForwardedTraffic": "true",
	    "allowGatewayTransit": "false",
	    "useRemoteGateways": "false",
	    "remoteVirtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetGWName'))]"
	    }
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
      "apiVersion": "2023-04-01",
      "name": "[concat(parameters('vnetGWName'), '/GW-To-Vnet')]",
      "location": "[parameters('location')]",
	  "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetGWName'))]",
		"[resourceId('Microsoft.Network/virtualNetworks/virtualNetworkPeerings', 'vnetGWwrusrom3c2jiu/Vnet-To-GW')]"
	  ],	  
      "properties": {
  	    "allowVirtualNetworkAccess": "true",
 	    "allowForwardedTraffic": "true",
	    "allowGatewayTransit": "true",
	    "useRemoteGateways": "false",
	    "remoteVirtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
	    }
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2023-04-01",
      "name": "[parameters('ipGWName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetGWName'))]"
      ],	  
	  "sku": {
        "name": "Standard",
		"tier": "Regional"
	  },
	  "zones": [],
      "properties": {
		"publicIPAddressVersion": "IPv4",
		"publicIPAllocationMethod": "Static"
	  }
    },

    {
      "type": "Microsoft.Network/virtualNetworks",
	  "apiVersion": "2023-04-01",
      "name": "[parameters('vnetBastionName')]",
      "location": "[parameters('location')]",
      "properties": {
	    "addressSpace": {
		  "addressPrefixes": [
		    "10.40.0.0/16"
		  ]
	    }
	  }
    },
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2023-04-01",
      "name": "[concat(parameters('vnetBastionName'), '/', parameters('snetBastionName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetBastionName'))]"
      ],
      "properties": {
        "addressPrefix": "10.40.0.0/24"
      }
    },	
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2023-04-01",
      "name": "[concat(parameters('vnetBastionName'), '/', parameters('snetAName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetBastionName'))]",
		"[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetBastionName'), parameters('snetBastionName'))]"
      ],
      "properties": {
        "addressPrefix": "10.40.10.0/24"
      }
    },	
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2023-04-01",
      "name": "[parameters('ipBastionName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetBastionName'))]"
      ],	  
	  "sku": {
        "name": "Standard",
		"tier": "Regional"
	  },
	  "zones": [],
      "properties": {
		"publicIPAddressVersion": "IPv4",
		"publicIPAllocationMethod": "Static"
	  }
    },

    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2018-11-01",
      "name": "[concat(parameters('vmName'), '-nic')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetBastionName'), parameters('snetAName'))]"
      ],		  
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig",
            "properties": {
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetBastionName'), parameters('snetAName'))]"
              }
            }
          }
        ]		
	  }
    },
	{
	  "type": "Microsoft.Compute/virtualMachines",
	  "apiVersion": "2021-03-01",
	  "name": "[parameters('vmName')]",
	  "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetBastionName'), parameters('snetAName'))]"
      ],	  
 	  "properties": {
		"hardwareProfile": {
		  "vmSize": "Standard_DS1_v2"		  
		},
		"storageProfile": {
		  "osDisk": {
			"createOption": "fromImage",
			"deleteOption": "Delete",
			"managedDisk": {
			  "storageAccountType": "Premium_LRS"
			}
		  },
		  "imageReference": {
			"publisher": "canonical",
			"offer": "0001-com-ubuntu-server-focal",
			"sku": "20_04-lts-gen2",
			"version": "latest"
		  }
		},
		"networkProfile": {
		  "networkInterfaces": [
		    {
			  "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmName'), '-nic'))]",
			  "properties": {
			    "deleteOption": "Delete"
              }
			}
		  ]
		},		
		"osProfile": {
		  "computerName": "[parameters('vmName')]",
		  "adminUsername": "johndoe",
		  "adminPassword": "supersecuretestpassword9889@@@"
		},
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": false
          }
        }
	  }
	},	
	
    {
      "type": "Microsoft.KeyVault/vaults",
	  "apiVersion": "2023-07-01",
      "name": "[parameters('kvName')]",
      "location": "[parameters('location')]",
      "properties": {
        "enableSoftDelete": false,
		"enableRbacAuthorization": true,
		"tenantId": "[parameters('tenantId')]",
        "sku": {
          "name": "Standard",
          "family": "A"
        }
      }
    },
    {
	  "type": "Microsoft.OperationalInsights/workspaces",
	  "apiVersion": "2022-10-01",
	  "name": "[parameters('logName')]",
      "location": "[parameters('location')]",
	  "properties": {
	    "sku": {
		  "name": "pergb2018"
		}
	  }
	},

    {
      "name": "[parameters('acrName')]",
      "type": "Microsoft.ContainerRegistry/registries",
      "apiVersion": "2019-05-01",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Basic",
        "tier": "Basic"
      },
      "properties": {}
    },
	{
	  "name": "[parameters('containerName')]",
	  "type": "Microsoft.ContainerInstance/containerGroups",
      "apiVersion": "2022-10-01-preview",
	  "location": "[parameters('location')]",
	  "properties": {
		"osType": "Linux",
		"sku": "Standard",
		"ipAddress": {
		  "type": "Public",
		  "ports": [
		    {
			  "port": "80",
			  "protocol": "TCP"
			}
		  ]
		},		  
		"containers": [
		  {
			"name": "container",
			"properties": {
			  "image": "mcr.microsoft.com/azuredocs/aci-helloworld:latest",
			  "resources": {
			      "requests": {
			        "cpu": 1,
			        "memoryInGB": 1.5
			    }
			  },
			  "ports": [
		        {
			      "port": "80",
			      "protocol": "TCP"
			    }
		      ]
			}
		  }
		]
	  }
	}
  ],
  "outputs": {}
}
